# Instruction on how to run your script at startup
Let us use Yocto WiFi configuration for automatic connection at boot time as case study
1. The first thing is to add your network setting to wpa_supplicant.conf in
poky/meta/recipes-connectivity/wpa-supplicant/wpa-supplicant.
run 'wpa_passphrase "<ssid>" "<password>"' to generate the psk like this: 

    network={
        ssid="WiFi"
        #psk="xxxx"
        psk=bcc0f1e055c895febe6f4766e90a7972334b2dac4dda015876a185a8bd577a04
    }

2. save this file.
3. The folder that run at startup is /meta/recipes-core/initscripts/initscripts-1.0
create a shell script and call its name setup-wifi.sh.
4.In this newly created script write the following commands;

    #!/bin/sh 

    wpa_passphrase "wifi" "xxxx" >> /etc/wpa_supplicant.conf
    ifup wlan0

    echo "wifi connected successfully"

    #This set the static IP address
    ifconfig wlan0 <ip address>

    exit 0

4. Edit initscript bitbake recipe at  /meta/recipes-core/initscripts/initscripts-1.0.bb
that incorporates the “setup-wifi.sh” and installs it in /etc/initscripts directory after build.

    file://setup-wifi.sh \
    "
    do_install () {
    install -m 0755    ${WORKDIR}/setup-wifi.sh     ${D}${sysconfdir}/init.d

    update-rc.d -r ${D} setup-wifi.sh start 99 2 3 4 5 .
    }

    MASKED_SCRIPTS = " \
    setup-wifi \
    "

5. To include a shell script in the build file. create a recipe e.g Create a recipe to add 
   to install the script on the build image. 
	Eg. add the script to installgpiopackages/files/install_gpio-packages.sh
	    create .bb file installgpiopackages/installgpiopackages_0.1.bb
		SUMMARY = "bitbake-layers recipe"
		DESCRIPTION = "Install gpio packages, (rgpio and gpiozero) "
		LICENSE = "MIT"
		LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"

		#Here we are fetching the file 
		SRC_URI = "file://install_gpio_packages.sh"
	
		S = "${WORKDIR}"

		#In this recipe, fetching will happen, no unpack will happen, no patched will happen.
		# we will do_compile

		do_install() {
			bbnote "Installing install_gpio_packages Started"
			install -d ${D}${bindir}    # this will create /bin on the target
			install -m 0755 install_gpio_packages.sh ${D}${bindir}/install_gpio_packages.sh  # this will install the script in /bin on the target
			bbnote "Installing install_gpio_packages Completed"
		}
6. To run a script at startup using systemd. Create a systemd service to run at startup
	SUMMARY = "bitbake-layers recipe"
	DESCRIPTION = "Install gpio packages, (rgpio and gpiozero) "
	LICENSE = "MIT"
	LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"

	#Here we are fetching the file 
	SRC_URI = "file://install_gpio_packages.sh \
	   	   file://install-gpio-packages.service \
	 	 "

	inherit systemd

	S = "${WORKDIR}"

	SYSTEMD_SERVICE_${PN} += "install-gpio-packages.service"

	#In this recipe, fetching will happen, no unpack will happen, no patched will happen.
	# we will do_compile

	do_install() {
		bbnote "Installing install_gpio_packages Started"
		install -d ${D}${sysconfdir}/init.d   # this will create /etc/init.d/
		install -d ${D}${sysconfdir}/systemd/system    # this will create /etc/systemd/system

		install -m 0755 install_gpio_packages.sh ${D}${sysconfdir}/init.d/    # this will install the script in /etc/init.d/
		install -m 0755 install-gpio-packages.service ${D}${sysconfdir}/systemd/system/   # this will install the script in /etc/systemd/system/
		bbnote "Installing install_gpio_packages Completed" 
	}
	#enable the service
	FILES_${PN} += " \
  		  ${sysconfdir}/systemd/system/install-gpio-packages.service \
		"  